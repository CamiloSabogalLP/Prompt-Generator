{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\Downloads\\\\project\\\\src\\\\components\\\\StoryForm.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoryForm = ({\n  onGenerate,\n  onClear\n}) => {\n  _s();\n  const [cardId, setCardId] = useState('');\n  const [cardName, setCardName] = useState('');\n  const [description, setDescription] = useState('');\n  const [acceptanceCriteria, setAcceptanceCriteria] = useState('');\n  const [isGherkin, setIsGherkin] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    let formattedCriteria = acceptanceCriteria;\n    if (isGherkin) {\n      const lines = acceptanceCriteria.split('\\n').filter(line => line.trim() !== '').map((line, index) => {\n        const prefix = index % 3 === 0 ? 'Dado que ' : index % 3 === 1 ? 'Cuando ' : 'Entonces ';\n        return prefix + line.trim();\n      });\n      formattedCriteria = lines.join('\\n');\n    }\n    const prompt = `Escribir casos de prueba de la siguiente historia de usuario. Por favor generar los casos con nombre de caso, precondicion y formato dado que, cuando y entonces. organiza los casos en una tabla de la siguiente manera: \n\ncolumna ID Subtarea: ${cardId}\ncolumna Caso de prueba: nombre del caso de prueba\ncolumna Precondicion: la precondicion\ncolumna Resultado esperado: el ENTONCES\ncolumna Estado: Dejar en blanco para redactar manualmente\ncolumna Evidencia: Dejar en blanco para redactar manualmente\ncolumna Comentarios: Dejar en blanco para redactar manualmente\n\nNombre de la card:\n${cardName}\n\nDescripcion:\n${description}\n\nCriterios de aceptacion:\n${formattedCriteria}`;\n    onGenerate(prompt);\n  };\n  const handleReset = () => {\n    setCardId('');\n    setCardName('');\n    setDescription('');\n    setAcceptanceCriteria('');\n    setIsGherkin(false);\n    if (onClear) onClear();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-4 p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\",\n      children: \"Generar Prompt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleReset,\n      className: \"w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\",\n      children: \"Limpiar Formulario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(StoryForm, \"rHVIVWAyaleI67IAOfdzp8YVK3c=\");\n_c = StoryForm;\nexport default StoryForm;\nvar _c;\n$RefreshReg$(_c, \"StoryForm\");","map":{"version":3,"names":["StoryForm","onGenerate","onClear","_s","cardId","setCardId","useState","cardName","setCardName","description","setDescription","acceptanceCriteria","setAcceptanceCriteria","isGherkin","setIsGherkin","handleSubmit","e","preventDefault","formattedCriteria","lines","split","filter","line","trim","map","index","prefix","join","prompt","handleReset","_jsxDEV","onSubmit","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/crist/Downloads/project/src/components/StoryForm.js"],"sourcesContent":["const StoryForm = ({ onGenerate, onClear }) => {\n  const [cardId, setCardId] = useState('');\n  const [cardName, setCardName] = useState('');\n  const [description, setDescription] = useState('');\n  const [acceptanceCriteria, setAcceptanceCriteria] = useState('');\n  const [isGherkin, setIsGherkin] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let formattedCriteria = acceptanceCriteria;\n    if (isGherkin) {\n      const lines = acceptanceCriteria.split('\\n')\n        .filter(line => line.trim() !== '')\n        .map((line, index) => {\n          const prefix = index % 3 === 0 ? 'Dado que ' :\n                        index % 3 === 1 ? 'Cuando ' : 'Entonces ';\n          return prefix + line.trim();\n        });\n      formattedCriteria = lines.join('\\n');\n    }\n\n    const prompt = `Escribir casos de prueba de la siguiente historia de usuario. Por favor generar los casos con nombre de caso, precondicion y formato dado que, cuando y entonces. organiza los casos en una tabla de la siguiente manera: \n\ncolumna ID Subtarea: ${cardId}\ncolumna Caso de prueba: nombre del caso de prueba\ncolumna Precondicion: la precondicion\ncolumna Resultado esperado: el ENTONCES\ncolumna Estado: Dejar en blanco para redactar manualmente\ncolumna Evidencia: Dejar en blanco para redactar manualmente\ncolumna Comentarios: Dejar en blanco para redactar manualmente\n\nNombre de la card:\n${cardName}\n\nDescripcion:\n${description}\n\nCriterios de aceptacion:\n${formattedCriteria}`;\n\n    onGenerate(prompt);\n  };\n\n  const handleReset = () => {\n    setCardId('');\n    setCardName('');\n    setDescription('');\n    setAcceptanceCriteria('');\n    setIsGherkin(false);\n    if (onClear) onClear();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4 p-6 bg-white rounded-lg shadow-md\">\n      {/* Todos los campos aqu√≠... */}\n\n      <button\n        type=\"submit\"\n        className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n      >\n        Generar Prompt\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={handleReset}\n        className=\"w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\n      >\n        Limpiar Formulario\n      </button>\n    </form>\n  );\n};\nexport default StoryForm;"],"mappings":";;;AAAA,MAAMA,SAAS,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACK,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIC,iBAAiB,GAAGP,kBAAkB;IAC1C,IAAIE,SAAS,EAAE;MACb,MAAMM,KAAK,GAAGR,kBAAkB,CAACS,KAAK,CAAC,IAAI,CAAC,CACzCC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,CAClCC,GAAG,CAAC,CAACF,IAAI,EAAEG,KAAK,KAAK;QACpB,MAAMC,MAAM,GAAGD,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,WAAW,GAC9BA,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,WAAW;QACvD,OAAOC,MAAM,GAAGJ,IAAI,CAACC,IAAI,CAAC,CAAC;MAC7B,CAAC,CAAC;MACJL,iBAAiB,GAAGC,KAAK,CAACQ,IAAI,CAAC,IAAI,CAAC;IACtC;IAEA,MAAMC,MAAM,GAAG;AACnB;AACA,uBAAuBxB,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAEG,QAAQ;AACV;AACA;AACA,EAAEE,WAAW;AACb;AACA;AACA,EAAES,iBAAiB,EAAE;IAEjBjB,UAAU,CAAC2B,MAAM,CAAC;EACpB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBxB,SAAS,CAAC,EAAE,CAAC;IACbG,WAAW,CAAC,EAAE,CAAC;IACfE,cAAc,CAAC,EAAE,CAAC;IAClBE,qBAAqB,CAAC,EAAE,CAAC;IACzBE,YAAY,CAAC,KAAK,CAAC;IACnB,IAAIZ,OAAO,EAAEA,OAAO,CAAC,CAAC;EACxB,CAAC;EAED,oBACE4B,OAAA;IAAMC,QAAQ,EAAEhB,YAAa;IAACiB,SAAS,EAAC,6CAA6C;IAAAC,QAAA,gBAGnFH,OAAA;MACEI,IAAI,EAAC,QAAQ;MACbF,SAAS,EAAC,sJAAsJ;MAAAC,QAAA,EACjK;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETR,OAAA;MACEI,IAAI,EAAC,QAAQ;MACbK,OAAO,EAAEV,WAAY;MACrBG,SAAS,EAAC,8IAA8I;MAAAC,QAAA,EACzJ;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACnC,EAAA,CAzEIH,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AA0Ef,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}